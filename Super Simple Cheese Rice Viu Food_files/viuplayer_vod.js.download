;
(function () {

    var labels = ["fullhd", "hd", "sd", "smooth"];
    var res_values = ["1080", "720", "480", "240"];

    handleResolutionMenu();

    function handleResolutionMenu() {

        var ResolutionMenu = videojs.getComponent("ResolutionMenu");
        var ResolutionItem = videojs.getComponent("ResolutionItem");
        var ResolutionButton = videojs.getComponent("ResolutionButton");

        var PremiumButton = videojs.extend(ResolutionItem, {
            handleClick: function () {
                this.player_.trigger("Show_Upgrade_Entry")
            }
        })

        ResolutionButton.prototype.createMenu = function () {
            var player = this.player();
            return new ResolutionMenu(player);
        }

        videojs.hook("setup", function (vjsPlayer, options) {

            vjsPlayer.on("resolutionsetup", function () {

                var resolutions_ = vjsPlayer.resolution.values.slice(0);
                var resolutionButton = vjsPlayer.getChild("ControlBar").getChild("ResolutionButton");
                var iconStyle = 'style=" height: 1em; width: 1em; vertical-align: middle; margin-right: 5px; margin-bottom: 2px; "'
                var premiumIcon = '<img src="/ott/'+global_area_code+'/v1/images/p_icon_18.png" width="18" height="18" ' + iconStyle + ' class="premium_mark">';
                var addResolutionItem = function (vjsPlayer, config) {

                    config.selectable = true;

                    var item = new ResolutionItem(vjsPlayer, config);

                    item.menuButton_ = resolutionButton;

                    resolutionButton.menu.addChild(item)

                }

                resolutionButton.menu.children().forEach(function (child) {
                    resolutionButton.removeChild(child);
                })

                if (!isVip) {
                    switch (resolutions[0]) {
                        case 720:
                            var i = 0;
                            break;
                        default:
                            var i = 1;
                            break;
                    }

                    for (var index = 0; index <= i; index++) {
                        resolutionButton.menu.addChild(new PremiumButton(vjsPlayer, {
                            label: premiumIcon + LANG_text[labels[index]]
                        }));
                    }

                    i = 1;
                    resolutions_.slice(1).forEach(function (res, index) {
                        for (var key in res_values) {
                            if (res.resolution == parseInt(res_values[key])) {
                                addResolutionItem(vjsPlayer, {
                                    selected: current_resolution == res_values[key],
                                    index: i,
                                    label: LANG_text[labels[key]],
                                    resolution: res_values[key]
                                });

                                i++;
                            }
                        }
                    })

                } else {

                    resolutions_.slice(1).forEach(function (res, index) {
                        for (var key in res_values) {
                            if (res.resolution == parseInt(res_values[key])) {
                                addResolutionItem(vjsPlayer, {
                                    selected: current_resolution == res_values[key],
                                    index: index + 1,
                                    label: LANG_text[labels[key]],
                                    resolution: res_values[key]
                                });
                            }
                        }
                    })
                }

            })

        })

    }

}());